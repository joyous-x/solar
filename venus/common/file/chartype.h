#pragma once
#include <stdio.h>

#define _IS_ALPHA_LOWER_FLAG    0x0001
#define _IS_ALPHA_UPPER_FLAG    0x0002
#define _IS_SYMBOL_FLAG         0x0004
#define _IS_DIGIT_FLAG          0x0008
#define _IS_HEX_DIGIT_FLAG      0x0010
#define _IS_SPACE_FLAG          0x0020
#define _IS_EOL_FLAG            0x0040
#define _IS_UNDER_LINE_FLAG     0x0080
#define _IS_EMAIL_NO_SPEC_FLAG  0x0100
#define _IS_BLANK_FLAG          0x0200
#define _IS_OCT_DIGIT_FLAG      0x0400


#define _IS_ALPHA_FLAG              ((_IS_ALPHA_LOWER_FLAG) | (_IS_ALPHA_UPPER_FLAG))
#define _IS_SPACE_EOL_FLAG          ((_IS_SPACE_FLAG) | (_IS_EOL_FLAG))
#define _IS_PRINT_FLAG              ((_IS_ALPHA_FLAG) | (_IS_DIGIT_FLAG) | (_IS_SYMBOL_FLAG) | (_IS_BLANK_FLAG))
#define _IS_PRINT_SPACE_EOL_FLAG    ((_IS_PRINT_FLAG) | (_IS_SPACE_EOL_FLAG))

#define _IS_GRAPH_FLAG              ((_IS_ALPHA_FLAG) | (_IS_DIGIT_FLAG) | (_IS_SYMBOL_FLAG))

#define _IS_TOKEN_FIRST_FLAG        ((_IS_ALPHA_FLAG) | (_IS_UNDER_LINE_FLAG))
#define _IS_TOKEN_NEXT_FLAG         ((_IS_ALPHA_FLAG) | (_IS_DIGIT_FLAG) | (_IS_UNDER_LINE_FLAG))

#define _IS_EMAIL_TOKEN_FLAG        ((_IS_ALPHA_FLAG) | (_IS_DIGIT_FLAG) | (_IS_EMAIL_NO_SPEC_FLAG))

static const uint16_t g_CharTypeTable[256] =
{
    0,    //     (0x00)
    0,    //     (0x01)
    0,    //     (0x02)
    0,    //     (0x03)
    0,    //     (0x04)
    0,    //     (0x05)
    0,    //     (0x06)
    0,    //     (0x07)
    0,    //     (0x08), '\b' backspace
    _IS_SPACE_FLAG        ,    //     (0x09), '\t' horizontal tab
    _IS_EOL_FLAG          ,    //     (0x0A), '\n' line feed
    0,    //     (0x0B), '\v' vertical tab
    0,    //     (0x0C), '\f' form feed
    _IS_EOL_FLAG          ,    //     (0x0D), '\r' carriage return
    0,    //     (0x0E)
    0,    //     (0x0F)
    0,    //     (0x10)
    0,    //     (0x11)
    0,    //     (0x12)
    0,    //     (0x13)
    0,    //     (0x14)
    0,    //     (0x15)
    0,    //     (0x16)
    0,    //     (0x17)
    0,    //     (0x18)
    0,    //     (0x19)
    0,    //     (0x1A)
    0,    //     (0x1B)
    0,    //     (0x1C)
    0,    //     (0x1D)
    0,    //     (0x1E)
    0,    //     (0x1F)
    _IS_SPACE_FLAG | _IS_BLANK_FLAG        ,    // ' ' (0x20)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '!' (0x21)
    _IS_SYMBOL_FLAG       ,    // '"' (0x22)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '#' (0x23)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '$' (0x24)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '%' (0x25)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '&' (0x26)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // ''' (0x27)
    _IS_SYMBOL_FLAG       ,    // '(' (0x28)
    _IS_SYMBOL_FLAG       ,    // ')' (0x29)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '*' (0x2A)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '+' (0x2B)
    _IS_SYMBOL_FLAG       ,    // ',' (0x2C)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '-' (0x2D)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '.' (0x2E)
    _IS_SYMBOL_FLAG       ,    // '/' (0x2F)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG | _IS_OCT_DIGIT_FLAG,    // '0' (0x30)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG | _IS_OCT_DIGIT_FLAG,    // '1' (0x31)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG | _IS_OCT_DIGIT_FLAG,    // '2' (0x32)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG | _IS_OCT_DIGIT_FLAG,    // '3' (0x33)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG | _IS_OCT_DIGIT_FLAG,    // '4' (0x34)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG | _IS_OCT_DIGIT_FLAG,    // '5' (0x35)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG | _IS_OCT_DIGIT_FLAG,    // '6' (0x36)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG | _IS_OCT_DIGIT_FLAG,    // '7' (0x37)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG    ,    // '8' (0x38)
    _IS_DIGIT_FLAG | _IS_HEX_DIGIT_FLAG    ,    // '9' (0x39)
    _IS_SYMBOL_FLAG       ,    // ':' (0x3A)
    _IS_SYMBOL_FLAG       ,    // ';' (0x3B)
    _IS_SYMBOL_FLAG       ,    // '<' (0x3C)
    _IS_SYMBOL_FLAG       ,    // '=' (0x3D)
    _IS_SYMBOL_FLAG       ,    // '>' (0x3E)
    _IS_SYMBOL_FLAG       ,    // '?' (0x3F)
    _IS_SYMBOL_FLAG       ,    // '@' (0x40)
    _IS_ALPHA_UPPER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'A' (0x41)
    _IS_ALPHA_UPPER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'B' (0x42)
    _IS_ALPHA_UPPER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'C' (0x43)
    _IS_ALPHA_UPPER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'D' (0x44)
    _IS_ALPHA_UPPER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'E' (0x45)
    _IS_ALPHA_UPPER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'F' (0x46)
    _IS_ALPHA_UPPER_FLAG  ,    // 'G' (0x47)
    _IS_ALPHA_UPPER_FLAG  ,    // 'H' (0x48)
    _IS_ALPHA_UPPER_FLAG  ,    // 'I' (0x49)
    _IS_ALPHA_UPPER_FLAG  ,    // 'J' (0x4A)
    _IS_ALPHA_UPPER_FLAG  ,    // 'K' (0x4B)
    _IS_ALPHA_UPPER_FLAG  ,    // 'L' (0x4C)
    _IS_ALPHA_UPPER_FLAG  ,    // 'M' (0x4D)
    _IS_ALPHA_UPPER_FLAG  ,    // 'N' (0x4E)
    _IS_ALPHA_UPPER_FLAG  ,    // 'O' (0x4F)
    _IS_ALPHA_UPPER_FLAG  ,    // 'P' (0x50)
    _IS_ALPHA_UPPER_FLAG  ,    // 'Q' (0x51)
    _IS_ALPHA_UPPER_FLAG  ,    // 'R' (0x52)
    _IS_ALPHA_UPPER_FLAG  ,    // 'S' (0x53)
    _IS_ALPHA_UPPER_FLAG  ,    // 'T' (0x54)
    _IS_ALPHA_UPPER_FLAG  ,    // 'U' (0x55)
    _IS_ALPHA_UPPER_FLAG  ,    // 'V' (0x56)
    _IS_ALPHA_UPPER_FLAG  ,    // 'W' (0x57)
    _IS_ALPHA_UPPER_FLAG  ,    // 'X' (0x58)
    _IS_ALPHA_UPPER_FLAG  ,    // 'Y' (0x59)
    _IS_ALPHA_UPPER_FLAG  ,    // 'Z' (0x5A)
    _IS_SYMBOL_FLAG       ,    // '[' (0x5B)
    _IS_SYMBOL_FLAG       ,    // '\' (0x5C)
    _IS_SYMBOL_FLAG       ,    // ']' (0x5D)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '^' (0x5E)
    _IS_SYMBOL_FLAG | _IS_UNDER_LINE_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '_' (0x5F)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '`' (0x60)
    _IS_ALPHA_LOWER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'a' (0x61)
    _IS_ALPHA_LOWER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'b' (0x62)
    _IS_ALPHA_LOWER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'c' (0x63)
    _IS_ALPHA_LOWER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'd' (0x64)
    _IS_ALPHA_LOWER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'e' (0x65)
    _IS_ALPHA_LOWER_FLAG | _IS_HEX_DIGIT_FLAG    ,    // 'f' (0x66)
    _IS_ALPHA_LOWER_FLAG  ,    // 'g' (0x67)
    _IS_ALPHA_LOWER_FLAG  ,    // 'h' (0x68)
    _IS_ALPHA_LOWER_FLAG  ,    // 'i' (0x69)
    _IS_ALPHA_LOWER_FLAG  ,    // 'j' (0x6A)
    _IS_ALPHA_LOWER_FLAG  ,    // 'k' (0x6B)
    _IS_ALPHA_LOWER_FLAG  ,    // 'l' (0x6C)
    _IS_ALPHA_LOWER_FLAG  ,    // 'm' (0x6D)
    _IS_ALPHA_LOWER_FLAG  ,    // 'n' (0x6E)
    _IS_ALPHA_LOWER_FLAG  ,    // 'o' (0x6F)
    _IS_ALPHA_LOWER_FLAG  ,    // 'p' (0x70)
    _IS_ALPHA_LOWER_FLAG  ,    // 'q' (0x71)
    _IS_ALPHA_LOWER_FLAG  ,    // 'r' (0x72)
    _IS_ALPHA_LOWER_FLAG  ,    // 's' (0x73)
    _IS_ALPHA_LOWER_FLAG  ,    // 't' (0x74)
    _IS_ALPHA_LOWER_FLAG  ,    // 'u' (0x75)
    _IS_ALPHA_LOWER_FLAG  ,    // 'v' (0x76)
    _IS_ALPHA_LOWER_FLAG  ,    // 'w' (0x77)
    _IS_ALPHA_LOWER_FLAG  ,    // 'x' (0x78)
    _IS_ALPHA_LOWER_FLAG  ,    // 'y' (0x79)
    _IS_ALPHA_LOWER_FLAG  ,    // 'z' (0x7A)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '{' (0x7B)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '|' (0x7C)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '}' (0x7D)
    _IS_SYMBOL_FLAG | _IS_EMAIL_NO_SPEC_FLAG,    // '~' (0x7E)
    0,    //     (0x7F)
    0,    //     (0x80)
    0,    //     (0x81)
    0,    //     (0x82)
    0,    //     (0x83)
    0,    //     (0x84)
    0,    //     (0x85)
    0,    //     (0x86)
    0,    //     (0x87)
    0,    //     (0x88)
    0,    //     (0x89)
    0,    //     (0x8A)
    0,    //     (0x8B)
    0,    //     (0x8C)
    0,    //     (0x8D)
    0,    //     (0x8E)
    0,    //     (0x8F)
    0,    //     (0x90)
    0,    //     (0x91)
    0,    //     (0x92)
    0,    //     (0x93)
    0,    //     (0x94)
    0,    //     (0x95)
    0,    //     (0x96)
    0,    //     (0x97)
    0,    //     (0x98)
    0,    //     (0x99)
    0,    //     (0x9A)
    0,    //     (0x9B)
    0,    //     (0x9C)
    0,    //     (0x9D)
    0,    //     (0x9E)
    0,    //     (0x9F)
    0,    //     (0xA0)
    0,    //     (0xA1)
    0,    //     (0xA2)
    0,    //     (0xA3)
    0,    //     (0xA4)
    0,    //     (0xA5)
    0,    //     (0xA6)
    0,    //     (0xA7)
    0,    //     (0xA8)
    0,    //     (0xA9)
    0,    //     (0xAA)
    0,    //     (0xAB)
    0,    //     (0xAC)
    0,    //     (0xAD)
    0,    //     (0xAE)
    0,    //     (0xAF)
    0,    //     (0xB0)
    0,    //     (0xB1)
    0,    //     (0xB2)
    0,    //     (0xB3)
    0,    //     (0xB4)
    0,    //     (0xB5)
    0,    //     (0xB6)
    0,    //     (0xB7)
    0,    //     (0xB8)
    0,    //     (0xB9)
    0,    //     (0xBA)
    0,    //     (0xBB)
    0,    //     (0xBC)
    0,    //     (0xBD)
    0,    //     (0xBE)
    0,    //     (0xBF)
    0,    //     (0xC0)
    0,    //     (0xC1)
    0,    //     (0xC2)
    0,    //     (0xC3)
    0,    //     (0xC4)
    0,    //     (0xC5)
    0,    //     (0xC6)
    0,    //     (0xC7)
    0,    //     (0xC8)
    0,    //     (0xC9)
    0,    //     (0xCA)
    0,    //     (0xCB)
    0,    //     (0xCC)
    0,    //     (0xCD)
    0,    //     (0xCE)
    0,    //     (0xCF)
    0,    //     (0xD0)
    0,    //     (0xD1)
    0,    //     (0xD2)
    0,    //     (0xD3)
    0,    //     (0xD4)
    0,    //     (0xD5)
    0,    //     (0xD6)
    0,    //     (0xD7)
    0,    //     (0xD8)
    0,    //     (0xD9)
    0,    //     (0xDA)
    0,    //     (0xDB)
    0,    //     (0xDC)
    0,    //     (0xDD)
    0,    //     (0xDE)
    0,    //     (0xDF)
    0,    //     (0xE0)
    0,    //     (0xE1)
    0,    //     (0xE2)
    0,    //     (0xE3)
    0,    //     (0xE4)
    0,    //     (0xE5)
    0,    //     (0xE6)
    0,    //     (0xE7)
    0,    //     (0xE8)
    0,    //     (0xE9)
    0,    //     (0xEA)
    0,    //     (0xEB)
    0,    //     (0xEC)
    0,    //     (0xED)
    0,    //     (0xEE)
    0,    //     (0xEF)
    0,    //     (0xF0)
    0,    //     (0xF1)
    0,    //     (0xF2)
    0,    //     (0xF3)
    0,    //     (0xF4)
    0,    //     (0xF5)
    0,    //     (0xF6)
    0,    //     (0xF7)
    0,    //     (0xF8)
    0,    //     (0xF9)
    0,    //     (0xFA)
    0,    //     (0xFB)
    0,    //     (0xFC)
    0,    //     (0xFD)
    0,    //     (0xFE)
    0,    //     (0xFF)
};


#define IS_APLHA(ch)            (g_CharTypeTable[(ch)] & _IS_ALPHA_FLAG)
#define IS_UPPER(ch)            (g_CharTypeTable[(ch)] & _IS_ALPHA_UPPER_FLAG)
#define IS_LOWER(ch)            (g_CharTypeTable[(ch)] & _IS_ALPHA_LOWER_FLAG)
#define IS_DIGIT(ch)            (g_CharTypeTable[(ch)] & _IS_DIGIT_FLAG)
#define IS_XDIGIT(ch)           (g_CharTypeTable[(ch)] & _IS_HEX_DIGIT_FLAG)
#define IS_ODIGIT(ch)           (g_CharTypeTable[(ch)] & _IS_OCT_DIGIT_FLAG)
#define IS_SPACE(ch)            (g_CharTypeTable[(ch)] & _IS_SPACE_FLAG)

#define IS_SYMBOL(ch)           (g_CharTypeTable[(ch)] & _IS_SYMBOL_FLAG)
#define IS_PUNCT(ch)            (g_CharTypeTable[(ch)] & _IS_SYMBOL_FLAG)

#define IS_PRINT(ch)            (g_CharTypeTable[(ch)] & _IS_PRINT_FLAG)
#define IS_GRAPH(ch)            (g_CharTypeTable[(ch)] & _IS_GRAPH_FLAG)

#define IS_SPACE_EOL(ch)        (g_CharTypeTable[(ch)] & _IS_SPACE_EOL_FLAG)

#define IS_EOL(ch)              (g_CharTypeTable[(ch)] & _IS_EOL_FLAG)

#define IS_PRINT_SPACE_EOL(ch)  (g_CharTypeTable[(ch)] & _IS_PRINT_SPACE_EOL_FLAG)

#define IS_TOKEN_FIRST(ch)      (g_CharTypeTable[(ch)] & _IS_TOKEN_FIRST_FLAG)
#define IS_TOKEN_NEXT(ch)       (g_CharTypeTable[(ch)] & _IS_TOKEN_NEXT_FLAG)

#define IS_EMAIL_TOKEN(ch)      (g_CharTypeTable[(ch)] & _IS_EMAIL_TOKEN_FLAG)

#define IS_XAPLHA(ch)           (g_CharTypeTable[(ch)] & (_IS_HEX_DIGIT_FLAG | _IS_ALPHA_FLAG))
#define IS_NONASCII(ch)         (ch > 0x7F)
